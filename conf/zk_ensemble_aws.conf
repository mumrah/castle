#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

{
  # Sets up a simple one-node Kafka cluster on AWS.

  "conf": {
    "kafkaPath": "%{CASTLE_KAFKA_PATH}",
    "castlePath": "%{CASTLE_PATH}",
    "globalTimeout": 3600
  },
  "nodes": {
    "zk1": {
      "roleNames": [
        #"awsWest2a",
        "awsEast1a",
        "collectd",
        "ubuntuNode",
        "zooKeeper",
        "jmx",
        "trogdorAgent"
      ]
    },
    "zk2": {
      "roleNames": [
        #"awsWest2b",
        "awsEast1b",
        "collectd",
        "ubuntuNode",
        "zooKeeper",
        "jmx",
        "trogdorAgent"
      ]
    },
    "zk3": {
      "roleNames": [
        "awsEast1c",
        "collectd",
        "ubuntuNode",
        "zooKeeper",
        "jmx",
        "trogdorAgent"
      ]
    }
    #,
    #"trogdor": {
    #  "roleNames": [
    #    "awsEast1c",
    #    "ubuntuNode",
    #    "trogdorCoordinator"
    #  ]
    #}
  },
  "roles": {
    "trogdorAgent": {
      "type": ".TrogdorAgentRole"
    },
    "trogdorCoordinator": {
      "type": ".TrogdorCoordinatorRole"
    },
    "awsEast1a": {
      "type": ".AwsNodeRole",
      "keyPair": "david.arthur-confluent-aws-us-east",
      "securityGroup": "sg-0324f2fde27517413",
      "internal": "false",
      "imageId": "ami-0a9a72fc61e9e5f59",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-east-1.pem",
      "sshUser": "ubuntu",
      "zone": "us-east-1a"
    },
    "awsEast1b": {
      "type": ".AwsNodeRole",
      "keyPair": "david.arthur-confluent-aws-us-east",
      "securityGroup": "sg-0324f2fde27517413",
      "internal": "false",
      "imageId": "ami-0a9a72fc61e9e5f59",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-east-1.pem",
      "sshUser": "ubuntu",
      "zone": "us-east-1b"
    },
    "awsEast1c": {
      "type": ".AwsNodeRole",
      "keyPair": "david.arthur-confluent-aws-us-east",
      "securityGroup": "sg-0324f2fde27517413",
      "internal": "false",
      "imageId": "ami-0a9a72fc61e9e5f59",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-east-1.pem",
      "sshUser": "ubuntu",
      "zone": "us-east-1c"
    },
    "awsWest2a": {
      "type": ".AwsNodeRole",
      "keyPair": "davidarthur-confluent",
      "securityGroup": "sg-0204b4f0215810700",
      "internal": "false",
      "imageId": "ami-07891ef972bbf5ae7",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-west-2.pem",
      "sshUser": "ubuntu",
      "zone": "us-west-2a"
    },
    "awsWest2b": {
      "type": ".AwsNodeRole",
      "keyPair": "davidarthur-confluent",
      "securityGroup": "sg-0204b4f0215810700",
      "internal": "false",
      "imageId": "ami-07891ef972bbf5ae7",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-west-2.pem",
      "sshUser": "ubuntu",
      "zone": "us-west-2b"
    },
    "awsWest2c": {
      "type": ".AwsNodeRole",
      "keyPair": "davidarthur-confluent",
      "securityGroup": "sg-0204b4f0215810700",
      "internal": "false",
      "imageId": "ami-07891ef972bbf5ae7",
      "instanceType": "m3.xlarge",
      "sshIdentityFile": "/Users/david.arthur/.ssh/davidarthur-confluent-aws-us-west-2.pem",
      "sshUser": "ubuntu",
      "zone": "us-west-2c"
    },
    "collectd": {
      "type": ".CollectdRole"
    },
    "jmx": {
      "type": ".JmxDumperRole",
      "initialDelayMs": 30000,
      "conf": {
        "localhost:8989": {
          "periodMs": 1000,
          "files": [
            {
              "path": "/mnt/logs/jmx/zookeeper-metrics.csv",
              "objects": [
                {
                  "name": "java.lang:type=Memory",
                  "shortName": "Memory",
                  "attributes": [],
                  "compoundAttributes" : {"HeapMemoryUsage": "used", "NonHeapMemoryUsage": "used"}
                },
                {
                  "name": "org.apache.ZooKeeperService:name2=Follower,*",
                  "class": "org.apache.zookeeper.server.quorum.FollowerBean",
                  "shortName": "ZooKeeperServiceFollower",
                  "attributes": ["OutstandingRequests", "ElectionTimeTaken", "MinRequestLatency", "AvgRequestLatency", "MaxRequestLatency", "NumAliveConnections"]
                },
                {
                  "name": "org.apache.ZooKeeperService:name2=Leader,*",
                  "class": "org.apache.zookeeper.server.quorum.LeaderBean",
                  "shortName": "ZooKeeperServiceLeader",
                  "attributes": ["OutstandingRequests", "ElectionTimeTaken", "MinRequestLatency", "AvgRequestLatency", "MaxRequestLatency", "NumAliveConnections"]
                },
                {
                  "name": "org.apache.ZooKeeperService:name3=InMemoryDataTree,*",
                  "shortName": "ZooKeeperTree",
                  "attributes": ["NodeCount", "WatchCount"]
                }
              ]
            }
          ]
        }
      }
    },
    "ubuntuNode": {
      "type": ".UbuntuNodeRole"
    },
    "zooKeeper": {
      "type": ".ZooKeeperRole"
    },
    "trogdorTask": {
      "type": ".TaskRole",
      "initialDelayMs": 60000,
      "taskSpecs": {
        "bench": {
          "class": "org.apache.kafka.trogdor.workload.ZooKeeperStressSpec",
          "clientNodes": ["zk2"],
          "startMs": 0,
          "durationMs": 90000,
          "zkConnect": "%{zkConnect}"
        },
        "fault": {
          "class": "org.apache.kafka.trogdor.fault.NetworkPartitionFaultSpec",
          "startMs": 30000,
          "durationMs": 30000,
          "partitions": [["zk1", "zk2"], ["zk3"]]
        }
      }
    }
  }
}
